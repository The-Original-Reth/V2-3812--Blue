# This file contains pin mappings for the LDO Kit using BigTreeTech Octopus V1 as the main controller.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the Octopus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech Octopus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

## [X in MOTOR0] - B Motor
## [Y in MOTOR1] - A Motor
## [E in MOTOR6] - Extruder

##Include files

[include mainsail.cfg]
[include timelapse.cfg]
[include test_speed.cfg]
[include temperature_color.cfg]
[include test_probe_accuracy.cfg]
[include K-ShakeTune/*.cfg]
######################
#nevermore folder
######################
[include nevermore/nevermore_filter_timer.cfg]
[include nevermore/fan_control.cfg]
[include nevermore/exhaust_filter_timer.cfg]
######################
######################
######################
#macros folder
######################
#All of the macros vince has done are in here
[include macros/clean_nozzle.cfg]
[include macros/adaptive_bed_mesh.cfg]
[include macros/adaptive_purge.cfg]
[include macros/bed_mesh.cfg]
[include macros/homing.cfg]
[include macros/beeper.cfg]
[include macros/led_control.cfg]
[include macros/parking.cfg]
[include macros/bed_extrude_chamber.cfg]
[include macros/pause_resume.cfg]
[include macros/filament_load_unload.cfg]
[include macros/stealthburner_leds.cfg]
[include macros/print_start_end.cfg]
[include macros/filament_list.cfg]
[include macros/adaptive_purge.cfg]
[include macros/fast_infill.cfg]
#[include macros/VGB.cfg]
[include macros/heatsoak_chamber.cfg]
[include config_backup.cfg]

#Saved Variables
[save_variables]
filename: ~/printer_data/config/saved_variables.cfg
#using this to save filter time

[exclude_object]

[respond] 

[pause_resume]

[display_status]

#Enable arcs support
[gcode_arcs]
resolution: 0.1

[duplicate_pin_override]
#used to display frame_temp in dashboard
#allows one to use the same pin multiple times
pins: PF7,PF6             #gantry_temp, frame_temp

#########################
#MCU's
#########################
[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_3E0030000A51373330333137-if00      #octopus board
restart_method: command
##--------------------------------------------------------------------

[mcu mellow_sb2040]
##Obtain canbus_uuid with "~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0"
#can bus status "ip -s link show can0"
canbus_uuid: d2099e95201b                  #mellow Sb2040 can bus board

#########################
#Printer Constants
#########################
[printer]
kinematics: corexy
max_velocity: 400           #default 500
max_accel: 4200  #input shaper says 5000    #default 10000 - manual change from the results of input shaper
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#########################
#input shaper
#########################
##Commands to use
#ACCELEROMETER_QUERY
#MEASURE_AXES_NOISE
#SHAPER_CALIBRATE
#for adxl345 attached to PI
# [mcu rpi]
# serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None
#for adxl345 attached to mellow_sp2040
#mellow_sp2040
[adxl345]
cs_pin: mellow_sb2040:gpio1
spi_software_sclk_pin: mellow_sb2040:gpio0
spi_software_mosi_pin: mellow_sb2040:gpio3
spi_software_miso_pin: mellow_sb2040:gpio2

[resonance_tester]
accel_chip: adxl345
probe_points:
    175, 175, 20  # an example

[input_shaper]
shaper_freq_x: 53.8
shaper_type_x: mzv
damping_ratio_x: 0.052
#accel_x: 8500
shaper_freq_y: 38.2
shaper_type_y: mzv
damping_ratio_y: 0.049
#accel_y: 4300

#####################################################################
#   Firmware Retarction
#####################################################################
[firmware_retraction]
retract_length: 0.65
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 45
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 30
#   The speed of unretraction, in mm/s. The default is 10 mm/s.
#####################################################################
#   X/Y Stepper Settings
#####################################################################
##  B Stepper - Left
##  Connected to MOTOR0
##  Endstop connected to DIAG0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: mellow_sb2040:gpio29
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 75   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.9 #default 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR1
##  Endstop connected to DIAG1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 200 for 1.8 degree stepper
endstop_pin: PG9
position_min: 0
position_endstop: 357
position_max: 357
homing_speed: 75  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.9 #default 0.9
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################
## Z0 Stepper - Front Left
##  Connected to MOTOR2_1
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128 #32
endstop_pin:probe:z_virtual_endstop
position_max: 290
position_min: -20
homing_speed: 10
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128 #32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128 #32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 128 #32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################
##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
#for Octopus
[extruder]
#step_pin: PE2
#dir_pin: !PE3
#enable_pin: !PD4
##################
#for mellow_sb2040
##################
step_pin: mellow_sb2040:gpio9
dir_pin: !mellow_sb2040:gpio10
enable_pin: !mellow_sb2040:gpio7
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#default
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
#vince
rotation_distance:  22.19658759 #22.4223156 
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
##LDO pancake motor 50:10 for cw2
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32 #default 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
#heater_pin: PA2
heater_pin: mellow_sb2040:gpio6
max_extrude_only_distance: 101.0 #added per Ellis print guide
max_extrude_cross_section: 5
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: ATC Semitec 104NT-4-R025H42G #ATC Semitec 104GT-2 #use for Dragon HF
#sensor_pin: PF4
sensor_pin: mellow_sb2040:gpio27

min_temp: 0
max_temp: 300
max_power: 1.0
min_extrude_temp: 180
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.058    
pressure_advance_smooth_time: 0.040 #0.020       #default 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
#for Octopus
[tmc2209 extruder]
uart_pin: mellow_sb2040:gpio8
interpolate: false
run_current: 0.65 #0.5 1-18-2022 was working, but needed more power #0.65 #LDO 1.8 degree LDO-36STH20-1004AHG  #default 0.5 for CW1 with LDO 1.8degree NEMA 17 LDO-42STH20-1004ASH(VRN)
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
#   Bed Heater
#####################################################################
[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.7 #default 0.6 355x355mm bed=1260.25cm2. 
min_temp: 0
max_temp: 120

[verify_heater heater_bed]
#max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 80 #default 60
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
#hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
#heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

#####################################################################
#   Probe - TAP
#####################################################################
[probe]
pin: mellow_sb2040:gpio28
x_offset: 0
y_offset: 0
#z_offset: 0 #default 0 - needed to change after moving to stealth burner
speed: 10.0
#samples: 3 #vince changed to three samples; default is 5
samples: 1 #changed for measure thermal behavior test. Need to change back after test
samples_result: median
sample_retract_dist: 1.5 #default is 3.0, 1.5 worked
samples_tolerance: 0.01 #0.006    #THIS IS THE DEFAULT
samples_tolerance_retries: 10  #vince changed to 10
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   voron-klipper-extension
#####################################################################
#https://github.com/voidtrance/voron-klipper-extensions
[settling_probe]
settling_sample: True
#   Globally enable the throw-away settling sample. Default is 'False'.
#   Setting this to 'True' will enable the throw-away sample for all
#   commands/operations that perform Z probing (QGL, Z tilt, Bed Mesh,
#   Screw Tilt, etc.)

#####################################################################
#   pause_resume
#####################################################################
[pause_resume]
recover_velocity: 50
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

#####################################################################
#   Fan Control
#####################################################################
[fan]
##  Print Cooling Fan - CNC_FAN0
#pin: PA8
pin: mellow_sb2040: gpio13
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - CNC_FAN1
#pin: PE5
pin: mellow_sb2040:gpio14
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
##  Controller fan - CNC_FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed,extruder
fan_speed: 0.5    #default 0.5
#added by Vince to make sure the controller fans go off when ever a motor or bed is used
stepper: stepper_x,stepper_y,stepper_z,stepper_z1,stepper_z2,stepper_z3,extruder
idle_timeout: 15

[fan_generic nevermore]
#this is the nevermore fan
pin: PD13
max_power: 1.0
kick_start_time: 5.0

[fan_generic chamber_exhaust_fan]
#this is the exhaust fan on the back of the machine
pin: PD14             ;between the filter fan and the LED strip
max_power: 1.0
kick_start_time: 0.5

#####################################################################
#   LED Control
#####################################################################
[output_pin caselight]
## Chamber Lighting - CNC_FAN5
pin: PD15
pwm:true
shutdown_value: 0
value:0
cycle_time: 0.01

#####################################################################
#   Frame compensation
#####################################################################
[z_thermal_adjust]
temp_coeff: 0.0014 #0.0007 old bed #0.0023
#   The temperature coefficient of expansion, in mm/degC. For example, a
#   temp_coeff of 0.01 mm/degC will move the Z axis downwards by 0.01 mm for
#   every degree Celsius that the temperature sensor increases. Defaults to
#   0.0 mm/degC, which applies no adjustment.
#smooth_time:
#   Smoothing window applied to the temperature sensor, in seconds. Can reduce
#   motor noise from excessive small corrections in response to sensor noise.
#   The default is 2.0 seconds.
#z_adjust_off_above:
#   Disables adjustments above this Z height [mm]. The last computed correction
#   will remain applied until the toolhead moves below the specified Z height
#   again. The default is 99999999.0 mm (always on).
#max_z_adjustment:
#   Maximum absolute adjustment that can be applied to the Z axis [mm]. The
#   default is 99999999.0 mm (unlimited).
### Frame Temperature sensor
sensor_type: Generic 3950
sensor_pin: PF6
min_temp: 0
max_temp: 100
gcode_id: z_th_adj

#####################################################################
#   Temperature Sensors
#####################################################################
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
max_temp: 100
gcode_id: pi_th

[temperature_sensor mcu_temp]
##octupus temp
sensor_type: temperature_mcu
max_temp: 100

[temperature_sensor mellow_sb2040]
sensor_type: temperature_mcu
sensor_mcu: mellow_sb2040
max_temp: 100
gcode_id: mellow_sb2040_th

[temperature_sensor frame_temp]
# Frame Temperature
sensor_type: Generic 3950
sensor_pin: PF6
min_temp: 0
max_temp: 100
gcode_id: frame_th

[temperature_sensor SB2040_Chamber]
sensor_type = ATC Semitec 104GT-2
sensor_pin = mellow_sb2040:gpio26
min_temp: -50
max_temp: 350
gcode_id: sb2040_ch

[temperature_sensor gantry_temp]
## Frame Temperature
sensor_type: Generic 3950
sensor_pin: PF7
min_temp: 0
max_temp: 100
gcode_id: gantry_th

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################
[idle_timeout]
timeout: 1800

[safe_z_home]
#vince updated for tap
home_xy_position: 175,175
speed:100
z_hop:10
z_hop_speed:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
##  Probe points
points:
   50,25
   50,275
   300,275
   300,25
speed: 100
horizontal_move_z: 15 #default 10
retries: 7
retry_tolerance: 0.0081 #default 0.006
max_adjust: 15

########################################
# EXP1 / EXP2 (display) pins
########################################
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################
[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.5
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        ##knob 1
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        ##knob 2
        SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=1 INDEX=2 TRANSMIT=0
        ##display
        SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=1 INDEX=3 

[output_pin beeper]
pin: PE8
value: 0
shutdown_value: 0
pwm: True
cycle_time: 0.0005 ; Default beeper tone in kHz. 1 / 0.0005 = 2000Hz (2kHz)
#--------------------------------------------------------------------

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.389
#*# pid_ki = 2.097
#*# pid_kd = 54.543
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 45.556
#*# pid_ki = 1.433
#*# pid_kd = 362.170
#*#
#*# [probe]
#*# z_offset = -0.960
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.040117, -0.009492, 0.005508
#*# 	  -0.053867, -0.049179, -0.038867
#*# 	  -0.057929, -0.062929, -0.041367
#*# 	  -0.030742, -0.023554, -0.013242
#*# 	  -0.010742, 0.000508, -0.001679
#*# x_count = 3
#*# y_count = 5
#*# mesh_x_pps = 3
#*# mesh_y_pps = 3
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 116.0
#*# max_x = 223.0
#*# min_y = 99.0
#*# max_y = 240.0
